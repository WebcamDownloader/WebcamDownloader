name: Build App

on:
  push:
#    tags:
#      - v*
  workflow_dispatch:

jobs:
  build_windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          arch: win64_mingw81
      - name: Compile App
        run: lrelease WebcamDownloader.pro && qmake && make
      - name: Create Deployment Dir
        run: mkdir ..\WebcamDownloader-Release && mv release\WebcamDownloader.exe ..\WebcamDownloader-Release && windeployqt --qmldir . ..\WebcamDownloader-Release\WebcamDownloader.exe && cp dependencies\* ..\WebcamDownloader-Release
      - name: Install InnoSetup & 7zip
        run: choco install -y innosetup 7zip
      - name: Create Installer
        run: iscc setupscript.iss && mv ..\WebcamDownloaderSetup.exe .
      - name: Create Zip
        run: 7z a WebcamDownloader.zip ..\WebcamDownloader-Release
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: WebcamDownloaderWindows
          path: |
            WebcamDownloaderSetup.exe
            WebcamDownloader.zip
          if-no-files-found: error
          retention-days: 7
  build_ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        imageVersion: [ '5.14', '5.15.0' ] # bug in 5.15, need to use specifically 5.15.0
        gui: [ gui, no-gui ]
        include:
          - imageVersion: '5.14'
            osVersion: '18.04'
          - imageVersion: '5.15.0'
            osVersion: '20.04'
          - gui: gui
            suffix: ''
          - gui: no-gui
            suffix: _cli_only
    container: rikudousage/qt-static:${{ matrix.imageVersion }}

    steps:
      - name: Install Git
        env:
          TZ: Europe/London
        run: apt-get update && apt-get -y install software-properties-common && add-apt-repository -y ppa:git-core/ppa && apt-get update && apt-get -y install git
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Disable GUI
        if: ${{ matrix.gui == 'no-gui' }}
        run: |
          echo "QT -= quick quickcontrols2 gui" >> WebcamDownloader.pro
          echo "DEFINES += NO_GUI" >> WebcamDownloader.pro
      - name: Compile App
        run: lrelease WebcamDownloader.pro && qmake && make
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: WebcamDownloaderLinux
          path: WebcamDownloader
          if-no-files-found: error
          retention-days: 7
