name: Build for Linux

on:
  push:
#    tags:
#      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        imageVersion: ['5.14', '5.15.0'] # bug in 5.15, need to use specifically 5.15.0
        gui: [gui, no-gui]
        include:
          - imageVersion: '5.14'
            osVersion: '18.04'
          - imageVersion: '5.15.0'
            osVersion: '20.04'
          - gui: gui
            suffix: ''
          - gui: no-gui
            suffix: _cli_only
    container: rikudousage/qt-static:${{ matrix.imageVersion }}

    steps:
      - name: Install Git
        env:
          TZ: Europe/London
        run: apt-get update && apt-get -y install software-properties-common && add-apt-repository -y ppa:git-core/ppa && apt-get update && apt-get -y install git
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set No GUI
        if: ${{ matrix.gui == 'no-gui' }}
        run: |
          echo "QT -= quick quickcontrols2 gui" >> WebcamDownloader.pro
          echo "DEFINES += NO_GUI" >> WebcamDownloader.pro
      - name: Compile App
        run: lrelease WebcamDownloader.pro && qmake && make
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: WebcamDownloader_${{ matrix.osVersion }}${{ matrix.suffix }}
          path: WebcamDownloader
          if-no-files-found: error
          retention-days: 7
#      - name: Create a Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#          body: Download either `WebcamDownloaderSetup.exe` (installer) or `WebcamDownloader.zip` (non installable version) from assets below
#      - name: Upload Setup
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./WebcamDownloaderSetup.exe
#          asset_name: WebcamDownloaderSetup.exe
#          asset_content_type: application/vnd.microsoft.portable-executable
#      - name: Upload Zip
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./WebcamDownloader.zip
#          asset_name: WebcamDownloader.zip
#          asset_content_type: application/zip
